{"version":3,"sources":["BooksAPI.js","components/BookList.js","components/SearchBooks.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","update","book","shelf","fetch","concat","id","method","Object","objectSpread","Content-Type","body","JSON","stringify","then","res","json","search","query","data","books","BookList","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","console","log","_this2","react_default","a","createElement","className","map","i","key","style","width","height","backgroundImage","imageLinks","thumbnail","defaultValue","onChange","event","onChangeShelf","value","disabled","title","authors","Link","to","React","Component","SearchBooks","type","placeholder","onKeyUp","onSearch","searchBookResults","length","error","BooksApp","state","setPage","setState","showSearchPage","searchBook","target","BooksAPI","currentState","catch","err","changeShelfviaSearch","newShelf","x","changeShelf","_this3","Route","exact","path","component","_ref","history","components_BookList","components_SearchBooks","ReactDOM","render","BrowserRouter","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.17a28423.chunk.js","sourcesContent":["\r\nconst api = \"https://reactnd-books-api.udacity.com\"\r\n\r\n\r\n// Generate a unique token for storing your bookshelf data on the backend server.\r\nlet token = localStorage.token\r\nif (!token)\r\n  token = localStorage.token = Math.random().toString(36).substr(-8)\r\n\r\nconst headers = {\r\n  'Accept': 'application/json',\r\n  'Authorization': token\r\n}\r\n\r\nexport const get = (bookId) =>\r\n  fetch(`${api}/books/${bookId}`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.book)\r\n\r\nexport const getAll = () =>\r\n  fetch(`${api}/books`, { headers })\r\n    .then(res => res.json())\r\n    .then(data => data.books)\r\n\r\nexport const update = (book, shelf) =>\r\n  fetch(`${api}/books/${book.id}`, {\r\n    method: 'PUT',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ shelf })\r\n  }).then(res => res.json())\r\n\r\nexport const search = (query) =>\r\n  fetch(`${api}/search`, {\r\n    method: 'POST',\r\n    headers: {\r\n      ...headers,\r\n      'Content-Type': 'application/json'\r\n    },\r\n    body: JSON.stringify({ query })\r\n  }).then(res => res.json())\r\n    .then(data => data.books)\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass BookList extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    console.log(props);\r\n  }\r\n  render() {\r\n    console.log(this.props);\r\n    return (\r\n      <div className=\"list-books\">\r\n        <div className=\"list-books-title\">\r\n          <h1>MyReads</h1>\r\n        </div>\r\n        <div className=\"list-books-content\">\r\n          <div>\r\n            <div className=\"bookshelf\">\r\n              <h2 className=\"bookshelf-title\">Currently Reading</h2>\r\n              <div className=\"bookshelf-books\">\r\n                <ol className=\"books-grid\">\r\n                  {this.props.books.map((book, i) =>\r\n                    book.shelf === 'currentlyReading' ? (\r\n                      <li key={book.id}>\r\n                        <div className=\"book\">\r\n                          <div className=\"book-top\">\r\n                            <div\r\n                              className=\"book-cover\"\r\n                              style={{\r\n                                width: 128,\r\n                                height: 193,\r\n                                backgroundImage: `url(${book.imageLinks.thumbnail})`,\r\n                              }}\r\n                            />\r\n                            <div className=\"book-shelf-changer\">\r\n                              <select defaultValue={book.shelf} onChange={event => this.props.onChangeShelf(event, book)}>\r\n                                <option value=\"move\" disabled>\r\n                                  Move to...\r\n                                </option>\r\n                                <option value=\"currentlyReading\">Currently Reading</option>\r\n                                <option value=\"wantToRead\">Want to Read</option>\r\n                                <option value=\"read\">Read</option>\r\n                                <option value=\"none\">None</option>\r\n                              </select>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"book-title\">{book.title}</div>\r\n                          <div className=\"book-authors\">{book.authors}</div>\r\n                        </div>\r\n                      </li>\r\n                    ) : null\r\n                  )}\r\n                </ol>\r\n              </div>\r\n            </div>\r\n            <div className=\"bookshelf\">\r\n              <h2 className=\"bookshelf-title\">Want to Read</h2>\r\n              <div className=\"bookshelf-books\">\r\n                <ol className=\"books-grid\">\r\n                  {this.props.books.map((book, i) =>\r\n                    book.shelf === 'wantToRead' ? (\r\n                      <li key={book.id}>\r\n                        <div className=\"book\">\r\n                          <div className=\"book-top\">\r\n                            <div\r\n                              className=\"book-cover\"\r\n                              style={{\r\n                                width: 128,\r\n                                height: 193,\r\n                                backgroundImage: `url(${book.imageLinks.thumbnail})`,\r\n                              }}\r\n                            />\r\n                            <div className=\"book-shelf-changer\">\r\n                              <select defaultValue={book.shelf} onChange={event => this.props.onChangeShelf(event, book)}>\r\n                                <option value=\"move\" disabled >\r\n                                  Move to...\r\n                                </option>\r\n                                <option value=\"currentlyReading\">Currently Reading</option>\r\n                                <option value=\"wantToRead\">Want to Read</option>\r\n                                <option value=\"read\">Read</option>\r\n                                <option value=\"none\">None</option>\r\n                              </select>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"book-title\">{book.title}</div>\r\n                          <div className=\"book-authors\">{book.authors}</div>\r\n                        </div>\r\n                      </li>\r\n                    ) : null\r\n                  )}\r\n                </ol>\r\n              </div>\r\n            </div>\r\n            <div className=\"bookshelf\">\r\n              <h2 className=\"bookshelf-title\">Read</h2>\r\n              <div className=\"bookshelf-books\">\r\n                <ol className=\"books-grid\">\r\n                  {this.props.books.map((book, i) =>\r\n                    book.shelf === 'read' ? (\r\n                      <li key={book.id}>\r\n                        <div className=\"book\">\r\n                          <div className=\"book-top\">\r\n                            <div\r\n                              className=\"book-cover\"\r\n                              style={{\r\n                                width: 128,\r\n                                height: 193,\r\n                                backgroundImage: `url(${book.imageLinks.thumbnail})`,\r\n                              }}\r\n                            />\r\n                            <div className=\"book-shelf-changer\">\r\n                              <select defaultValue={book.shelf} onChange={event => this.props.onChangeShelf(event, book)}>\r\n                                <option value=\"move\" disabled>\r\n                                  Move to...\r\n                                </option>\r\n                                <option value=\"currentlyReading\">Currently Reading</option>\r\n                                <option value=\"wantToRead\">Want to Read</option>\r\n                                <option value=\"read\">Read</option>\r\n                                <option value=\"none\">None</option>\r\n                              </select>\r\n                            </div>\r\n                          </div>\r\n                          <div className=\"book-title\">{book.title}</div>\r\n                          <div className=\"book-authors\">{book.authors}</div>\r\n                        </div>\r\n                      </li>\r\n                    ) : null\r\n                  )}\r\n                </ol>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        {/* <div className=\"open-search\">\r\n          <button onClick={() => this.props.onSearch(true)}>Add a book</button>\r\n        </div> */}\r\n        <Link className=\"open-search\" to=\"/searchbooks\">\r\n          <button>Add a book</button>\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BookList;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nclass SearchBooks extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    console.log(props);\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"search-books\">\r\n        <div className=\"search-books-bar\">\r\n          <Link className=\"close-search\" to=\"/\">\r\n            Close\r\n          </Link>\r\n          <div className=\"search-books-input-wrapper\">\r\n            {/*\r\n                  NOTES: The search from BooksAPI is limited to a particular set of search terms.\r\n                  You can find these search terms here:\r\n                  https://github.com/udacity/reactnd-project-myreads-starter/blob/master/SEARCH_TERMS.md\r\n\r\n                  However, remember that the BooksAPI.search method DOES search by title or author. So, don't worry if\r\n                  you don't find a specific author or title. Every search is limited by search terms.\r\n                */}\r\n            <input\r\n              type=\"text\"\r\n              placeholder=\"Search by title or author\"\r\n              onKeyUp={event => this.props.onSearch(event)}\r\n            />\r\n          </div>\r\n        </div>\r\n        <div className=\"search-books-results\">\r\n          <ol className=\"books-grid\" />\r\n          {this.props.searchBookResults && this.props.searchBookResults.length\r\n            ? this.props.searchBookResults.map(book => (\r\n                <li key={book.id}>\r\n                  <div className=\"book\">\r\n                    <div className=\"book-top\">\r\n                      <div\r\n                        className=\"book-cover\"\r\n                        style={{\r\n                          width: 128,\r\n                          height: 193,\r\n                          backgroundImage: `url(${book.imageLinks.thumbnail})`,\r\n                        }}\r\n                      />\r\n                      <div className=\"book-shelf-changer\">\r\n                        <select\r\n                          defaultValue={book.shelf}\r\n                          onChange={event => this.props.onChangeShelf(event, book)}\r\n                        >\r\n                          <option value=\"move\" disabled>\r\n                            Move to...\r\n                          </option>\r\n                          <option value=\"currentlyReading\">Currently Reading</option>\r\n                          <option value=\"wantToRead\">Want to Read</option>\r\n                          <option value=\"read\">Read</option>\r\n                          <option value=\"none\">None</option>\r\n                        </select>\r\n                      </div>\r\n                    </div>\r\n                    <div className=\"book-title\">{book.title}</div>\r\n                    <div className=\"book-authors\">{book.authors}</div>\r\n                  </div>\r\n                </li>\r\n              ))\r\n            : this.props.searchBookResults.error}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default SearchBooks;\r\n","import React from 'react';\r\nimport * as BooksAPI from './BooksAPI';\r\nimport './App.css';\r\nimport BookList from './components/BookList';\r\nimport SearchBooks from './components/SearchBooks';\r\nimport { Route } from 'react-router-dom';\r\n\r\nclass BooksApp extends React.Component {\r\n  state = {\r\n    /**\r\n     * TODO: Instead of using this state variable to keep track of which page\r\n     * we're on, use the URL in the browser's address bar. This will ensure that\r\n     * users can use the browser's back and forward buttons to navigate between\r\n     * pages, as well as provide a good URL they can bookmark and share.\r\n     */\r\n    books: [],\r\n    searchBookResults: [],\r\n  };\r\n\r\n  setPage = setState => {\r\n    this.setState(() => ({\r\n      showSearchPage: setState,\r\n    }));\r\n  };\r\n\r\n  searchBook = event => {\r\n    console.log(event);\r\n    if (!event.target.value || !event.target.value.length) {\r\n      this.setState(currentState => ({\r\n        searchBookResults: [],\r\n      }));\r\n    } else\r\n      BooksAPI.search(event.target.value)\r\n        .then(books => {\r\n          console.log(books);\r\n          this.setState(currentState => ({\r\n            searchBookResults: books,\r\n          }));\r\n        })\r\n        .catch(err => {\r\n          console.log(err);\r\n        });\r\n  };\r\n\r\n  changeShelfviaSearch = (event, book) => {\r\n    let newShelf = event.target.value;\r\n    book.shelf = newShelf;\r\n\r\n    BooksAPI.update(book, newShelf)\r\n      .then(books => {\r\n        this.setState(currentState => ({\r\n          searchBookResults: currentState.searchBookResults.map((x, i) => {\r\n            if (x.id === book.id) {\r\n              return { ...x, shelf: newShelf };\r\n            }\r\n            return x;\r\n          }),\r\n          books: currentState.books.concat(book),\r\n        }));\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  changeShelf = (event, book) => {\r\n    let newShelf = event.target.value;\r\n\r\n    BooksAPI.update(book, newShelf)\r\n      .then(books => {\r\n        this.setState(currentState => ({\r\n          books: currentState.books.map((x, i) => {\r\n            if (x.id === book.id) {\r\n              return { ...x, shelf: newShelf };\r\n            }\r\n            return x;\r\n          }),\r\n        }));\r\n      })\r\n      .catch(err => {\r\n        console.log(err);\r\n      });\r\n  };\r\n\r\n  componentDidMount() {\r\n    BooksAPI.getAll().then(books => {\r\n      this.setState(currentState => ({\r\n        books: books,\r\n      }));\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"app\">\r\n        {/* {this.state.showSearchPage ? <SearchBooks /> : <BookList onSearch={this.setPage} />} */}\r\n        <Route\r\n          exact\r\n          path=\"/\"\r\n          component={({ history }) => (\r\n            <BookList books={this.state.books} onChangeShelf={this.changeShelf} />\r\n          )}\r\n        />\r\n        <Route\r\n          path=\"/searchbooks\"\r\n          component={() => (\r\n            <SearchBooks\r\n              searchBookResults={this.state.searchBookResults}\r\n              onSearch={this.searchBook}\r\n              onChangeShelf={this.changeShelfviaSearch}\r\n            />\r\n          )}\r\n        />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default BooksApp;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}